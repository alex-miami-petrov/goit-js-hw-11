{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\n\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport SimpleLightbox from 'simplelightbox';\n\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst apiKey = '44685335-fea0dcf7b7c0436df223e42aa';\n\nexport async function fetchImages(searchTerm) {\n  const url = `https://pixabay.com/api/?key=${apiKey}&q=${encodeURIComponent(\n    searchTerm\n  )}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.hits;\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    throw new Error('Failed to fetch images from Pixabay');\n  }\n}\n","import iziToast from 'izitoast';\n\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport SimpleLightbox from 'simplelightbox';\n\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport function renderImages(images) {\n  const gallery = document.getElementById('gallery');\n  gallery.innerHTML = '';\n\n  if (images.length === 0) {\n    showErrorMessage();\n    return;\n  }\n\n  images.forEach(image => {\n    const imgElement = document.createElement('img');\n    imgElement.src = image.webformatURL;\n    imgElement.alt = image.tags;\n    gallery.appendChild(imgElement);\n  });\n}\n\nfunction showErrorMessage() {\n  iziToast.error({\n    title: 'Error',\n    message:\n      'Sorry, there are no images matching your search query. Please try again!',\n    position: 'topRight',\n  });\n}\n","import iziToast from 'izitoast';\nimport { fetchImages } from './js/pixabay-api.js';\nimport { renderImages } from './js/render-functions.js';\n\nconst searchForm = document.getElementById('search-form');\nconst searchInput = document.getElementById('search-input');\n\nsearchForm.addEventListener('submit', async function (event) {\n  event.preventDefault();\n\n  const searchTerm = searchInput.value.trim();\n\n  if (searchTerm === '') {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please enter a search term',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  try {\n    const images = await fetchImages(searchTerm);\n    renderImages(images);\n  } catch (error) {\n    console.error('Error searching images:', error);\n    iziToast.error({\n      title: 'Error',\n      message: 'Failed to search images. Please try again later.',\n      position: 'topRight',\n    });\n  }\n});\n"],"names":["apiKey","fetchImages","searchTerm","url","error","renderImages","images","gallery","showErrorMessage","image","imgElement","iziToast","searchForm","searchInput","event"],"mappings":"svBAQA,MAAMA,EAAS,qCAER,eAAeC,EAAYC,EAAY,CAC5C,MAAMC,EAAM,gCAAgCH,CAAM,MAAM,mBACtDE,CACD,CAAA,2DAED,GAAI,CAGF,OADa,MADI,MAAM,MAAMC,CAAG,GACJ,QAChB,IACb,OAAQC,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvC,IAAI,MAAM,qCAAqC,CACtD,CACH,CCfO,SAASC,EAAaC,EAAQ,CACnC,MAAMC,EAAU,SAAS,eAAe,SAAS,EAGjD,GAFAA,EAAQ,UAAY,GAEhBD,EAAO,SAAW,EAAG,CACvBE,IACA,MACD,CAEDF,EAAO,QAAQG,GAAS,CACtB,MAAMC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,IAAMD,EAAM,aACvBC,EAAW,IAAMD,EAAM,KACvBF,EAAQ,YAAYG,CAAU,CAClC,CAAG,CACH,CAEA,SAASF,GAAmB,CAC1BG,EAAS,MAAM,CACb,MAAO,QACP,QACE,2EACF,SAAU,UACd,CAAG,CACH,CC5BA,MAAMC,EAAa,SAAS,eAAe,aAAa,EAClDC,EAAc,SAAS,eAAe,cAAc,EAE1DD,EAAW,iBAAiB,SAAU,eAAgBE,EAAO,CAC3DA,EAAM,eAAc,EAEpB,MAAMZ,EAAaW,EAAY,MAAM,KAAI,EAEzC,GAAIX,IAAe,GAAI,CACrBS,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,6BACT,SAAU,UAChB,CAAK,EACD,MACD,CAED,GAAI,CACF,MAAML,EAAS,MAAML,EAAYC,CAAU,EAC3CG,EAAaC,CAAM,CACpB,OAAQF,EAAO,CACd,QAAQ,MAAM,0BAA2BA,CAAK,EAC9CO,EAAS,MAAM,CACb,MAAO,QACP,QAAS,mDACT,SAAU,UAChB,CAAK,CACF,CACH,CAAC"}